{
	"fileTypes": [
		"simvolio"
	],
	"name": "simvolio",
	"patterns": [{
		"include": "#expression"
	}],
	"repository": {
		"type-literal": {
			"name": "const.simvolio",
			"begin": "^\\s*(var\\b)?([a-zA-Z0-9-_\\s,.])+\\s+\\b(bool|bytes|int|address|array|map|money|float|string)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.simvolio"
				},
				"3": {
					"name": "entity.name.type.simvolio"
				}
			},
			"end": "\\b"
		},
		"comparsion-operator": {
			"name": "keyword.operator.comparison.simvolio",
			"match": "\\b(==|!=|>|<|<=|>=)\\b"
		},
		"control-statement": {
			"name": "keyword.control.simvolio",
			"match": "\\b(if|while|func|else)\\b"
		},
		"simvolio": {
			"name": "entity.name.function.simvolio",
			"match": "\\b(LangRes|FindEcosystem|CallContract|ContractAccess|ContractConditions|EvalCondition|ValidateCondition|AddressToId|Contains|Float|HasPrefix|HexToBytes|Int|Len|PubToID|Replace|Size|Sha256|Sprintf|Str|Substr|UpdateLang|SysParamString|SysParamInt|UpdateSysParam)\\b"
		},
		"common-constants": {
			"name": "variable.language.simvolio",
			"match": "\\B\\$(key_id|ecosystem_id|type|time|block|block_time|block_key_id)[^\\w\\$]"
		},
		"defined-var": {
			"name": "variable.other.simvolio",
			"match": "\\B\\$([a-zA-Z0-9_]*)\\b"
		},
		"protypo": {
			"name": "entity.name.class.simvolio",
			"match": "\\b(Div|Span|Button|Table|AddToolButton|Em|Form|Image|ImageInput|Include|Input|Validate|InputErr|Label|LinkPage|MenuGroup|MenuItem|Now|P|RadioGroup|Select|Strong|LangRes)\\b|\\.(Alert|Style)\\b"
		},
		"protypo-params": {
			"name": "variable.language.simvolio",
			"match": "\\b(Class|Body|Source|Name|Contract|Wallet|Title|Value|Disabled|Placeholder|Format|Width|Ratio|Alt|Src|Condition|Source|PageParams|Page|Params|Type|NameColumn|ValueColumn|Columns|Index)\\b:\\s*"
		},
		"protypo-func": {
			"name": "entity.name.function.simvolio",
			"match": "\\b(EcosysParam|ForList|Or|And|Address|SetVar|CmpTime|Data|DateTime|SetTitle|GetVar|If|DBInt|DBAmount|DBFind|DBInsert|DBIntExt|DBIntWhere|DBRowExt|DBString|DBStringExt|DBStringWhere|DBInsertReport|DBUpdate|DBUpdateExt)\\b|\\.(Else|ElseIf|Where|WhereId|Order|Limit|Offset|Ecosystem|Custom|Vars|Columns)\\b"
		},
		"variable": {
			"name": "variable.other.simvolio",
			"match": "([a-zA-Z0-9_-]*#[a-zA-Z0-9_-]*)+"
		},
		"lang-res": {
			"name": "variable.parameter.simvolio",
			"match": "(\\$[a-zA-Z0-9_-]+\\$)"
		},
		"class-name": {
			"name": "string.html.simvolio",
			"match": "[\\`\\'\\sa-zA-Z0-9_]*-[\\`\\'\\sa-zA-Z0-9_]*"
		},
		"strings": {
			"name": "string.quoted.double.simvolio",
			"match": "\".*?\""
		},
		"simvolio-comments": {
			"name": "comment.line.simvolio",
			"match": "//.*$"
		},
		"expression": {
			"name": "meta.expression.simvolio",
			"patterns": [{
					"include": "#strings"
				},
				{
					"include": "#simvolio-comments"
				},
				{
					"include": "#comparsion-operator"
				},
				{
					"include": "#control-statement"
				},
				{
					"include": "#protypo-params"
				},
				{
					"include": "#simvolio"
				},
				{
					"include": "#protypo"
				},
				{
					"include": "#common-constants"
				},
				{
					"include": "#protypo-func"
				},
				{
					"include": "#type-literal"
				},
				{
					"include": "#lang-res"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#defined-var"
				}
			]
		}
	},
	"scopeName": "source.simvolio"
}