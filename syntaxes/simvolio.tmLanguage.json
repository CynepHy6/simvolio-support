{
	"fileTypes": [
		"simvolio"
	],
	"name": "simvolio",
	"patterns": [{
		"include": "#expression"
	}],
	"repository": {
		"assignment-operator": {
			"name": "keyword.operator.assignment.simvolio",
			"match": "[=:]"
		},
		"contract": {
			"name": "meta.block.simvolio",
			"match": "\\b(contract|conditions|action|data)(:?\\s*\\{)"
		},
		"type-literal": {
			"name": "entity.name.type.simvolio",
			"match": "\\b(bool|bytes|int|address|array|map|money|float|string)\\b"
		},
		"comparsion-operator": {
			"name": "keyword.operator.comparison.simvolio",
			"match": "==|!=|>|<"
		},
		"control-statement": {
			"name": "keyword.control.simvolio",
			"begin": "\\s*(if|while|func|else)"
		},
		"block-params": {
			"name": "variable.language.vobject.simvolio",
			"match": "\\b(Class|Body|Source|Name|Contract|Wallet|Title)\\b"
		},
		"simvolio": {
			"name": "entity.name.function.simvolio",
			"match": "\\b(LangRes|FindEcosystem|CallContract|ContractAccess|ContractConditions|EvalCondition|ValidateCondition|AddressToId|Contains|Float|HasPrefix|HexToBytes|Int|Len|PubToID|Replace|Size|Sha256|Sprintf|Str|Substr|UpdateLang|SysParamString|SysParamInt|UpdateSysParam|var)\\b"
		},
		"common-constants": {
			"name": "entity.name.type.simvolio",
			"match": "\\$(key_id|ecosystem_id|type|time|block|block_time|block_key_id)\\b"
		},
		"defined-var": {
			"name": "variable.other.private.simvolio",
			"match": "\\b(\\$\\w+)\\b"
		},
		"protypo": {
			"name": "entity.name.function.simvolio",
			"match": "\\b(Div|Span|Button|Table|Address|SetVar|AddToolButton|And|Alert|Style|CmpTime|Data|DateTime|Columns|Where|WhereId|Order|Limit|Offset|Ecosystem|Custom|Vars|EcosysParam|Em|Form|GetVar|If|Image|ImageInput|Include|Input|Validate|InputErr|Label|LinkPage|MenuGroup|MenuItem|Now|Or|P|RadioGroup|Select|SetTitle|Strong|Page|LangRes)\\b"
		},
		"db-func": {
			"name": "entity.name.function.simvolio",
			"match": "\\b(DBInt|DBAmount|DBFind|DBInsert|DBIntExt|DBIntWhere|DBRowExt|DBString|DBStringExt|DBStringWhere|DBInsertReport|DBUpdate|DBUpdateExt)\\b"
		},
		"variable": {
			"name": "variable.other.simvolio",
			"match": "(#[a-zA-Z0-9_-]*#)"
		},
		"lang-res": {
			"name": "variable.parameter.simvolio",
			"match": "(\\$[a-zA-Z0-9_-]+\\$)"
		},
		"class-name": {
			"name": "string.simvolio",
			"match": "[\\`\\'\\sa-zA-Z0-9_]*-[\\'\\`\\sa-zA-Z0-9_-]*"
		},
		"expression": {
			"name": "meta.expression.simvolio",
			"patterns": [{
					"include": "#class-name"
				},
				{
					"include": "#contract"
				},
				{
					"include": "#comparsion-operator"
				},
				{
					"include": "#assignment-operator"
				},
				{
					"include": "#control-statement"
				},
				{
					"include": "#block-params"
				},
				{
					"include": "#simvolio"
				},
				{
					"include": "#protypo"
				},
				{
					"include": "#common-constants"
				},
				{
					"include": "#db-func"
				},
				{
					"include": "#type-literal"
				},
				{
					"include": "#lang-res"
				},
				{
					"include": "#variable"
				}
			]
		}
	},
	"scopeName": "source.simvolio"
}